# NGINX server configuration file that sets up a virtual host to serve a website over HTTPS
server {

    # General server settings
    server_name abeaugra.42.fr; # Domain name the virtual host should respond to
    listen 443 ssl; # Server listens for incoming HTTPS requests on port 443 and uses Secure Sockets Layer (SSL) to encrypt communications
    root /var/www/html; # The root directory of the website
    index index.php; # The homepage of the website

    # SSL configuration
    ssl_certificate /etc/ssl/certs/abeaugra.42.fr.crt; # Location of the public signed certificate
    ssl_certificate_key /etc/ssl/private/abeaugra.42.fr.key; # Location of the private key to the certificate
    ssl_protocols TLSv1.3; # Transport Layer Security (TLS) 1.3 for encryption

    # http://nginx.org/en/docs/http/configuring_https_servers.html

    # How NGINX should route client requests to correct location within the file system
    location / {
        autoindex on; # Process the requests ending by '/' and display a directory listing
        try_files $uri $uri/ /index.php?$args =404; # Check recursively if files exist and serve the file located first

        # try_files -> http://nginx.org/en/docs/http/ngx_http_core_module.html#try_files
    }

    # Tell NGINX to proxy PHP requests from a user to the PHP interpreter of a backend server which uses Fast Common Gateway Interface (FastCGI)
    location ~ \.php$ { # A request '/index.php' is matched by the prefix location '/' first and then by the regular expression '\.php$'
        try_files $uri =404; # Show a standard 404 error page when a user types a wrong URL that ends with '.php'
        fastcgi_split_path_info ^(.+?\.php)(/.*)$; # Regex to correctly handle requests like '/test.php/foo/blah.php' or '/test.php/'
        fastcgi_pass wordpress:9000; # Forward PHP requests from a client to a backend server that handles PHP processing using the FastCGI protocol (PHP-FPM)
        fastcgi_index index.php; # Set a file name that will be appended after a URI that ends with a '/' following the '$fastcgi_script_name' variable
        include fastcgi_params; # Include the fastcgi_param settings
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name; # Path to the script file used by PHP-FPM to locate and execute it

        # location ~ \.php$ -> http://nginx.org/en/docs/http/request_processing.html
        # fastcgi_split_path_info -> https://www.nginx.com/resources/wiki/start/topics/examples/phpfcgi/
        # fastcgi_pass -> https://www.digitalocean.com/community/tutorials/understanding-and-implementing-fastcgi-proxying-in-nginx#fastcgi-proxying-basics
        # fastcgi_index -> http://nginx.org/en/docs/http/ngx_http_fastcgi_module.html#fastcgi_index
        # fastcgi_param SCRIPT_FILENAME -> https://www.nginx.com/resources/wiki/start/topics/examples/phpfcgi/
    }
}

#+---------+                +------------+
#| Browser |                |   NGINX    |
#+---------+                +------------+
#     |                            |
#     |   Request for a PHP file   |
#     --------------------------->+|
#     |                            |
#     |   Send request to NGINX    |
#     --------------------------->+|
#     |                            |
#     |    Match location block    |
#     --------------------------->+|
#     |                            |
#     |      Split path info       |
#     --------------------------->+|
#     |                            |
#     |  Pass request to FastCGI   |
#     --------------------------->+|
#     |                            |
#     |      Execute PHP code      |
#     --------------------------->+|
#     |                            |
#     |  Return output to FastCGI  |
#     +<----------------------------
#     |                            |
#     |   Return output to NGINX   |
#     +<----------------------------
#     |                            |
#     |  Return output to Browser  |
#     +<---------------------------
